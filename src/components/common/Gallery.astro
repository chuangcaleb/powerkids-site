---
import pkCloudinary, { type CldImage } from "@/lib/cloudinary";
import { cn } from "@/lib/utils";
import { cardStyle } from "../ui/card";

interface Props {
  prefixRoute: string;
}

const { prefixRoute } = Astro.props;

/**
 * Recursively fetch all Cloudinary resources using an immutable strategy.
 * @param {object} options - Initial options for cloudinary.api.resources
 * @param {Array} acc - Accumulator (for internal use only)
 * @returns {Promise<Array>} - All resources fetched
 */
async function fetch(
  options: object = {},
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  acc: any[] = []
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
): Promise<any[]> {
  const response = await pkCloudinary.api.resources({
    type: "upload",
    ...options,
  });

  const updatedResources = [...acc, ...response.resources];

  if (response.next_cursor) {
    return fetch(
      { ...options, next_cursor: response.next_cursor },
      updatedResources
    );
  }

  return updatedResources;
}
const photos = await fetch({
  type: "upload",
  prefix: prefixRoute,
});

console.log(photos);
---

<div class="columns-sm fl-gap-s fl-space-y-l">
  {
    photos.map((image: CldImage) => (
      <img
        src={image.url}
        alt=""
        class={cn(cardStyle(), "col-span-2 fl-mb-s")}
        height={image.height}
        width={image.width}
        loading="lazy"
        decoding="async"
      />
    ))
  }
</div>
